@using BlazorServerApp.Data.Models

<div class="modal" tabindex="-1" role="dialog" style="display:@MessageDisplay">
    <div class="modal-dialog modal-dialog-scrollable" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title"><a class="badge badge-success">New Motor</a></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="()=>Close()">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <EditForm Model="@motorModel" OnValidSubmit="@(async ()=> await AddNewMotor())">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                <div class="modal-body justify-content-center">
                    <div class="form-group">
                        <label for="Name" class="badge badge-secondary" style="font-size: 15px">Name</label>
                        <input type="text" @bind-value="@motorModel.Name" placeholder="Enter Motor name" style="margin-left:1px"/>
                    </div>
                    <div class="form-group">
                        <div class="row" style="margin-left:1px">
                            <label for="Type" class="badge badge-secondary" style="font-size: 15px">Type</label>
                            <input type="text" @bind-value="@motorModel.Type" style="visibility:hidden; width:1px" readonly/>
                            <select class="form-control" style="width:200px" @bind="@motorModel.Type">
                                @foreach (var item in Templates)
                                {
                                    <option value=@item>@item</option>
                                }
                            </select>
                        </div>
                    </div>
                </div>

                <div class="modal-footer">
                    <input type="submit" class="btn btn-primary" value="Save Changes" />
                </div>
            </EditForm>
        </div>
    </div>
</div>

@if (Showbackdrop)
{
    <div class="modal-backdrop fade show"></div>
}

@code {
    [Parameter]
    public MotorAPI ClientService { get; set; }
    [Parameter]
    public EventCallback MotorFormClosed { get; set; }

    private MotorModel motorModel { get; set; } = new();
    private List<string> Templates => Enum.GetNames(typeof(MotorType)).ToList();

    public Guid Guid = Guid.NewGuid();
    public string MessageDisplay = "none";
    public string ModalClass = "";
    public bool Showbackdrop = false;

    public void Open()
    {
        MessageDisplay = "block";
        ModalClass = "Show";
        Showbackdrop = true;
        StateHasChanged();
        motorModel.Type = MotorType.Electric;
    }

    public void Close()
    {
        MessageDisplay = "none";
        ModalClass = "";
        Showbackdrop = false;
        StateHasChanged();
        MotorFormClosed.InvokeAsync();
    }

    private async Task AddNewMotor()
    {
        if (!string.IsNullOrEmpty(motorModel.Name))
        {
            await ClientService.AddMotorAsync(motorModel.Name, motorModel.Type);
            Close();
        }
    }
}
